# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-03-15 02:44
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('profiles', '0002_profile_is_teacher'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accommodation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('rating', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5)])),
            ],
        ),
        migrations.CreateModel(
            name='AccommodationOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('category', models.CharField(blank=True, max_length=200)),
                ('price', models.PositiveSmallIntegerField(default=0)),
                ('amenities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, size=None)),
                ('other_amenities', models.TextField(blank=True, max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Amenities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('option', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, size=None)),
                ('other_option', models.TextField(blank=True, max_length=5000)),
                ('rating', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BookingFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('price', models.PositiveSmallIntegerField(default=0)),
                ('terms', models.TextField(blank=True, max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('option', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, size=None)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='GroupGeneralType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('value', models.PositiveSmallIntegerField(default=0)),
                ('hour', models.PositiveSmallIntegerField(default=0)),
                ('terms', models.TextField(blank=True, max_length=5000)),
                ('student', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(default=0), blank=True, size=None)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupIntensiveType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('value', models.PositiveSmallIntegerField(default=0)),
                ('hour', models.PositiveSmallIntegerField(default=0)),
                ('terms', models.TextField(blank=True, max_length=5000)),
                ('student', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(default=0), blank=True, size=None)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Immersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('option', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, size=None)),
                ('other_option', models.TextField(blank=True, max_length=5000)),
                ('rating', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PackageOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('name', models.CharField(default='', max_length=100)),
                ('description', models.TextField(blank=True, default='', max_length=10000)),
                ('price', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('methods', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, size=None)),
                ('other', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('group', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group', to='schools.GroupClass')),
            ],
        ),
        migrations.CreateModel(
            name='PrivateClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PrivateGeneralType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('value', models.PositiveSmallIntegerField(default=0)),
                ('hour', models.PositiveSmallIntegerField(default=0)),
                ('terms', models.TextField(blank=True, max_length=5000)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrivateIntensiveType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('value', models.PositiveSmallIntegerField(default=0)),
                ('hour', models.PositiveSmallIntegerField(default=0)),
                ('terms', models.TextField(blank=True, max_length=5000)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.TextField(blank=True, default='', max_length=5000)),
                ('name', models.CharField(default='', max_length=100)),
                ('about', models.TextField(blank=True, default='', max_length=10000)),
                ('language_teach', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, size=None)),
                ('website', models.CharField(default='', max_length=200)),
                ('facebook', models.CharField(default='', max_length=200)),
                ('twitter', models.CharField(default='', max_length=200)),
                ('instagram', models.CharField(default='', max_length=200)),
                ('email', models.EmailField(max_length=50)),
                ('facebook_group', models.CharField(default='', max_length=200)),
                ('meetup_group', models.CharField(default='', max_length=200)),
                ('language_exchange', models.BooleanField(default=False)),
                ('atmosphere', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5)])),
                ('classes_begin', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, size=None)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('accommodation', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accommodation', to='schools.Accommodation')),
                ('amenities', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='amenities', to='schools.Amenities')),
                ('booking_fee', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='booking_fee', to='schools.BookingFee')),
                ('discount', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discount', to='schools.Discount')),
                ('immersion', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='immersion', to='schools.Immersion')),
                ('package', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='package', to='schools.Package')),
                ('payment_method', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_method', to='schools.PaymentMethod')),
                ('price', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='price', to='schools.Price')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('option', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, size=None)),
                ('city_tour', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Volunteering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('option', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, size=None)),
                ('rating', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkExchange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='WorkExchangeOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('category', models.CharField(blank=True, max_length=200)),
                ('terms', models.TextField(blank=True, max_length=5000)),
            ],
        ),
        migrations.AddField(
            model_name='workexchange',
            name='option',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.WorkExchangeOption'),
        ),
        migrations.AddField(
            model_name='school',
            name='tour',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tour', to='schools.Tour'),
        ),
        migrations.AddField(
            model_name='school',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.Profile'),
        ),
        migrations.AddField(
            model_name='school',
            name='volunteering',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='volunteering', to='schools.Volunteering'),
        ),
        migrations.AddField(
            model_name='school',
            name='work_exchange',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_exchange', to='schools.WorkExchange'),
        ),
        migrations.AddField(
            model_name='privateclass',
            name='general_type',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='private_general_type', to='schools.PrivateGeneralType'),
        ),
        migrations.AddField(
            model_name='privateclass',
            name='intensive_type',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='private_intensive_type', to='schools.PrivateIntensiveType'),
        ),
        migrations.AddField(
            model_name='price',
            name='private',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='private', to='schools.PrivateClass'),
        ),
        migrations.AddField(
            model_name='package',
            name='option',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.PackageOption'),
        ),
        migrations.AddField(
            model_name='groupclass',
            name='general_type',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='general_type', to='schools.GroupGeneralType'),
        ),
        migrations.AddField(
            model_name='groupclass',
            name='intensive_type',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='intensive_type', to='schools.GroupIntensiveType'),
        ),
        migrations.AddField(
            model_name='accommodation',
            name='option',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.AccommodationOption'),
        ),
    ]
